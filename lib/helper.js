import axios from 'axios'
import Config from '@/lib/config'
import countries from './countries.js'
import $ from 'jquery'
import { parse } from 'node-html-parser'
import decode from 'unescape'
import { v4 as uuidv4 } from 'uuid';

export default {
  hskColors: {
    1: '#f8b51e',
    2: '#267f94',
    3: '#fd4f1c',
    4: '#bb1718',
    5: '#1b3e76',
    6: '#6a3669',
    outside: '#c59f94'
  },
  hskWordCount: {
    1: 150,
    2: 150,
    3: 300,
    4: 600,
    5: 1300,
    6: 2500
  },
  loaderMessages: [],
  topics: {
    animation: 'Animation',
    art: 'Art',
    engineering: 'Engineering',
    education: 'Education',
    entertainment: 'Entertainment',
    food: 'Food',
    geography: 'Geography',
    history: 'History',
    kids: 'Kids',
    language: 'Language',
    literature: 'Literature',
    music: 'Music',
    news: 'News',
    religion: 'Religion',
    science: 'Science',
    society: 'Society'
  },
  cjk: /[\u4E00-\u9FCC\u3400-\u4DB5\uFA0E\uFA0F\uFA11\uFA13\uFA14\uFA1F\uFA21\uFA23\uFA24\uFA27-\uFA29]+/gi,
  nonCjk: /[^\u4E00-\u9FCC\u3400-\u4DB5\uFA0E\uFA0F\uFA11\uFA13\uFA14\uFA1F\uFA21\uFA23\uFA24\uFA27-\uFA29]+/gi,
  dictionaryTooLargeAndWillCauseServerCrash(l2) {
    let tooLarge = ['lat', 'spa', 'deu', 'ita', 'fra', 'por'].includes(l2)
    return tooLarge
  },
  isMobile() {
    if (typeof navigator !== 'undefined' && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
      return true
    } else {
      return false
    }
  },
  levels(l2 = undefined) {
    if (l2 && l2.code === 'zh') {
      return {
        1: 'HSK 1',
        2: 'HSK 2',
        3: 'HSK 3',
        4: 'HSK 4',
        5: 'HSK 5',
        6: 'HSK 6',
        7: 'Outside HSK'
      }
    } else if (l2 && l2.code === 'ja') {
      return {
        1: 'Pre-N5',
        2: 'N5',
        3: 'N4',
        4: 'N3',
        5: 'N2',
        6: 'N1',
        7: 'C2'
      }
    } else {
      return {
        1: 'Pre-A1',
        2: 'A1',
        3: 'A2',
        4: 'B1',
        5: 'B2',
        6: 'C1',
        7: 'C2'
      }
    }
  },
  iOS() {
    return [
      'iPad Simulator',
      'iPhone Simulator',
      'iPod Simulator',
      'iPad',
      'iPhone',
      'iPod'
    ].includes(navigator.platform)
  },
  level(level, l2 = undefined) {
    let levels = this.levels(l2)
    return levels[level]
  },
  unescape(escapedHTML) {
    return decode(escapedHTML)
  },
  uniqueId() {
    let uniqueID = uuidv4()
    return uniqueID
  },
  delay(ms) {
    return new Promise(res => setTimeout(res, ms))
  },
  splitByReg(text, reg) {
    let words = text.replace(reg, '!!!BREAKWORKD!!!$1!!!BREAKWORKD!!!').replace(/^!!!BREAKWORKD!!!/, '').replace(/!!!BREAKWORKD!!!$/, '')
    return words.split('!!!BREAKWORKD!!!')
  },
  timeout(ms) {
    return new Promise(resolve => setTimeout(resolve, ms))
  },
  uniqueByValue(array, key) {
    let flags = []
    let unique = []
    let l = array.length
    for (let i = 0; i < l; i++) {
      if (flags[array[i][key]]) continue
      flags[array[i][key]] = true
      unique.push(array[i])
    }
    return unique
  },
  // https://stackoverflow.com/questions/38613654/javascript-find-unique-objects-in-array-based-on-multiple-properties
  uniqueByValues(arr, keyProps) {
    const kvArray = arr.map(entry => {
      const key = keyProps.map(k => entry[k]).join('|');
      return [key, entry];
    });
    const map = new Map(kvArray);
    return Array.from(map.values());
  },
  uniqueSort(items, uniqueKey, sortKey, order, locale) {
    return this.uniqueByValue(items, uniqueKey).sort((x, y) => {
      if (order === 'ascending') {
        return x[sortKey] ? x[sortKey].localeCompare(y[sortKey], locale, { numeric: true }) : 0
      } else {
        return y[sortKey] ? y[sortKey].localeCompare(x[sortKey], locale, { numeric: true }) : 0
      }
    })

  },
  flatten(object) {
    return Object.keys(object).reduce((r, k) => { return r.concat(object[k]) }, [])
  },
  // https://www.consolelog.io/group-by-in-javascript/
  groupArrayBy(array, prop) {
    return array.reduce(function (groups, item) {
      const val = item[prop]
      groups[val] = groups[val] || []
      groups[val].push(item)
      return groups
    }, {})
  },
  // https://stackoverflow.com/questions/8922107/javascript-scrollintoview-middle-alignment
  documentOffsetTop(element) {
    return element.offsetTop +
      (element.offsetParent ? this.documentOffsetTop(element.offsetParent) : 0);
  },
  // https://www.javascripttutorial.net/dom/css/check-if-an-element-is-visible-in-the-viewport/
  isInViewport(element, offsetTop = 0, offsetBottom = 0) {
    const rect = element.getBoundingClientRect();
    return (
      rect.top >= offsetTop &&
      rect.left >= 0 &&
      rect.bottom <= ((window.innerHeight || document.documentElement.clientHeight) - offsetBottom) &&
      rect.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
  },
  elementHeight(element, offset = 0) {
    const rect = element.getBoundingClientRect();
    return (
      rect.top >= offset &&
      rect.left >= 0 &&
      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
      rect.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
  },
  // json or plain text only, and returns object
  async proxy(url, cacheLife = -1, encoding = false) {
    let response = await
      axios.get(
        `${Config.scrape2}?url=${encodeURIComponent(
          url
        )}&cache_life=${cacheLife}` + (encoding ? `&encoding=${encoding}` : '')
      )
    if (response.data) {
      return response.data
    } else {
      return false
    }
  },
  async proxyParsed(url, cacheLife = -1, encoding = false) {
    let html = await this.proxy(url, cacheLife, encoding)
    return parse(html)
  },
  async scrape(url, cacheLife = -1, encoding = false) {
    return new Promise((resolve, reject) => {
      axios.get(
        `${Config.scrape2}?url=${encodeURIComponent(
          url
        )}&cache_life=${cacheLife}` + (encoding ? `&encoding=${encoding}` : '')
      ).then(response => {
        if (response) {
          if (typeof document !== 'undefined') {
            let ownerDocument = document.implementation.createHTMLDocument('virtual')
            var $html = $(response.data, ownerDocument)
            resolve($html, ownerDocument, response)
          } else {
            resolve(false)
          }
        } else {
          resolve(false)
        }
      })
    })
  },
  speak(text, l2, rate = 0.75, volume = 1, localOnly = false) {
    let voices = speechSynthesis.getVoices()
    if (localOnly) {
      voices = voices.filter(voice => voice.localService === true)
    }
    let availableLocales = voices.map((voice) => voice.lang)
    let preferredLocales = [l2.code]
    if (l2.code === 'yue') preferredLocales = ['zh-HK'].concat(preferredLocales)
    if (l2.code === 'en') preferredLocales = ['en-US'].concat(preferredLocales)
    if (l2.locales)
      preferredLocales = preferredLocales.concat(l2.locales)
    let bestLocale = preferredLocales.find(preferredLocale => availableLocales.includes(preferredLocale))
    if (bestLocale) {
      let bestVoice = voices.find(voice => voice.lang === bestLocale)
      if (bestVoice) {
        var utterance = new SpeechSynthesisUtterance(text)
        utterance.lang = bestLocale
        utterance.voice = bestVoice
        utterance.rate = rate
        utterance.volume = volume

        return new Promise(function (resolve) {
          utterance.onend = resolve;
          utterance.onerror = resolve;
          // console.log('üå≤ Started speaking')
          speechSynthesis.speak(utterance);
          // console.log(utterance)
          // console.log(speechSynthesis)
        });
        // console.log('üçÅ finished speaking')
      }
    }
  },
  highlight(text, word, level = false) {
    let levelAttr = level ? ` data-level="${level}"` : ''
    if (text && word && word.trim() !== '') {
      return text
        .replace(
          new RegExp('(' + this.escapeRegExp(word).replace(/\*/g, '[^Ôºå„ÄÇÔºÅÔºü,!.?]+?') + ')', 'gi'),
          `<span ${levelAttr} class="highlight">$1</span>`
        )
    } else {
      return text
    }
  },
  // https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex
  escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
  },
  highlightMultiple(text, words, level) {
    if (text && words && words.length > 0) {
      for (let word of words) {
        text = this.highlight(text, word, level)
      }
      return text
    } else {
      return text
    }
  },
  /* http://hackingui.com/front-end/a-pure-css-solution-for-multiline-text-truncation/ */
  ellipsizeTextBox(el) {
    var wordArray = el.innerHTML.split(' ')
    while (el.scrollHeight > el.offsetHeight) {
      wordArray.pop()
      el.innerHTML = wordArray.join(' ') + '...'
    }
  },
  unique(a) {
    return a.filter((item, i, ar) => ar.indexOf(item) === i);
  },
  country(code) {
    for (let country of countries) {
      if (country.code === code) {
        return country
      }
    }
  },
  // https://css-tricks.com/snippets/javascript/shuffle-array/
  shuffle(o) {
    for (var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
    return o;
  },
  stripTags(html) {
    let root = parse(html)
    return root.textContent || root.innerHTML || ''
  },
  randomInt(max) {
    return Math.floor(Math.random() * Math.floor(max))
  },
  randomArrayItem(array, start = 0, length = false) {
    length = length || array.length
    array = array.slice(start, length)
    let index = Math.floor(Math.random() * array.length)
    return array[index]
  },
  ucFirst(string) {
    return string.charAt(0).toUpperCase() + string.slice(1)
  },
  absoluteURL(base, relative) {
    if (relative.startsWith('http') || relative.startsWith('//')) {
      return relative
    }
    if (relative.startsWith('#')) {
      return base + relative
    }
    if (relative.startsWith('/')) {
      const protocal = base.replace(/(.*):\/\/.*/, '$1')
      const host = base.replace(/.*\/\/([^/]*).*/, '$1')
      return `${protocal}://${host}${relative}`
    }
    var stack = base.split('/'),
      parts = relative.split('/')
    stack.pop() // remove current file name (or empty string)
    // (omit if "base" is the current folder without trailing slash)
    for (var i = 0; i < parts.length; i++) {
      if (parts[i] == '.') continue
      if (parts[i] == '..') stack.pop()
      else stack.push(parts[i])
    }
    return stack.join('/')
  },
  isEmpty(obj) {
    for (var key in obj) {
      if (obj.hasOwnProperty(key)) return false
    }
    return true
  },
  characterClass(category) {
    // Letter
    if (category === 'L') return "A-Za-z\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEF\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7C6\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB67\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC\U00010000-\U0001000B\U0001000D-\U00010026\U00010028-\U0001003A\U0001003C\U0001003D\U0001003F-\U0001004D\U00010050-\U0001005D\U00010080-\U000100FA\U00010280-\U0001029C\U000102A0-\U000102D0\U00010300-\U0001031F\U0001032D-\U00010340\U00010342-\U00010349\U00010350-\U00010375\U00010380-\U0001039D\U000103A0-\U000103C3\U000103C8-\U000103CF\U00010400-\U0001049D\U000104B0-\U000104D3\U000104D8-\U000104FB\U00010500-\U00010527\U00010530-\U00010563\U00010600-\U00010736\U00010740-\U00010755\U00010760-\U00010767\U00010800-\U00010805\U00010808\U0001080A-\U00010835\U00010837\U00010838\U0001083C\U0001083F-\U00010855\U00010860-\U00010876\U00010880-\U0001089E\U000108E0-\U000108F2\U000108F4\U000108F5\U00010900-\U00010915\U00010920-\U00010939\U00010980-\U000109B7\U000109BE\U000109BF\U00010A00\U00010A10-\U00010A13\U00010A15-\U00010A17\U00010A19-\U00010A35\U00010A60-\U00010A7C\U00010A80-\U00010A9C\U00010AC0-\U00010AC7\U00010AC9-\U00010AE4\U00010B00-\U00010B35\U00010B40-\U00010B55\U00010B60-\U00010B72\U00010B80-\U00010B91\U00010C00-\U00010C48\U00010C80-\U00010CB2\U00010CC0-\U00010CF2\U00010D00-\U00010D23\U00010F00-\U00010F1C\U00010F27\U00010F30-\U00010F45\U00010FE0-\U00010FF6\U00011003-\U00011037\U00011083-\U000110AF\U000110D0-\U000110E8\U00011103-\U00011126\U00011144\U00011150-\U00011172\U00011176\U00011183-\U000111B2\U000111C1-\U000111C4\U000111DA\U000111DC\U00011200-\U00011211\U00011213-\U0001122B\U00011280-\U00011286\U00011288\U0001128A-\U0001128D\U0001128F-\U0001129D\U0001129F-\U000112A8\U000112B0-\U000112DE\U00011305-\U0001130C\U0001130F\U00011310\U00011313-\U00011328\U0001132A-\U00011330\U00011332\U00011333\U00011335-\U00011339\U0001133D\U00011350\U0001135D-\U00011361\U00011400-\U00011434\U00011447-\U0001144A\U0001145F\U00011480-\U000114AF\U000114C4\U000114C5\U000114C7\U00011580-\U000115AE\U000115D8-\U000115DB\U00011600-\U0001162F\U00011644\U00011680-\U000116AA\U000116B8\U00011700-\U0001171A\U00011800-\U0001182B\U000118A0-\U000118DF\U000118FF\U000119A0-\U000119A7\U000119AA-\U000119D0\U000119E1\U000119E3\U00011A00\U00011A0B-\U00011A32\U00011A3A\U00011A50\U00011A5C-\U00011A89\U00011A9D\U00011AC0-\U00011AF8\U00011C00-\U00011C08\U00011C0A-\U00011C2E\U00011C40\U00011C72-\U00011C8F\U00011D00-\U00011D06\U00011D08\U00011D09\U00011D0B-\U00011D30\U00011D46\U00011D60-\U00011D65\U00011D67\U00011D68\U00011D6A-\U00011D89\U00011D98\U00011EE0-\U00011EF2\U00012000-\U00012399\U00012480-\U00012543\U00013000-\U0001342E\U00014400-\U00014646\U00016800-\U00016A38\U00016A40-\U00016A5E\U00016AD0-\U00016AED\U00016B00-\U00016B2F\U00016B40-\U00016B43\U00016B63-\U00016B77\U00016B7D-\U00016B8F\U00016E40-\U00016E7F\U00016F00-\U00016F4A\U00016F50\U00016F93-\U00016F9F\U00016FE0\U00016FE1\U00016FE3\U00017000-\U000187F7\U00018800-\U00018AF2\U0001B000-\U0001B11E\U0001B150-\U0001B152\U0001B164-\U0001B167\U0001B170-\U0001B2FB\U0001BC00-\U0001BC6A\U0001BC70-\U0001BC7C\U0001BC80-\U0001BC88\U0001BC90-\U0001BC99\U0001D400-\U0001D454\U0001D456-\U0001D49C\U0001D49E\U0001D49F\U0001D4A2\U0001D4A5\U0001D4A6\U0001D4A9-\U0001D4AC\U0001D4AE-\U0001D4B9\U0001D4BB\U0001D4BD-\U0001D4C3\U0001D4C5-\U0001D505\U0001D507-\U0001D50A\U0001D50D-\U0001D514\U0001D516-\U0001D51C\U0001D51E-\U0001D539\U0001D53B-\U0001D53E\U0001D540-\U0001D544\U0001D546\U0001D54A-\U0001D550\U0001D552-\U0001D6A5\U0001D6A8-\U0001D6C0\U0001D6C2-\U0001D6DA\U0001D6DC-\U0001D6FA\U0001D6FC-\U0001D714\U0001D716-\U0001D734\U0001D736-\U0001D74E\U0001D750-\U0001D76E\U0001D770-\U0001D788\U0001D78A-\U0001D7A8\U0001D7AA-\U0001D7C2\U0001D7C4-\U0001D7CB\U0001E100-\U0001E12C\U0001E137-\U0001E13D\U0001E14E\U0001E2C0-\U0001E2EB\U0001E800-\U0001E8C4\U0001E900-\U0001E943\U0001E94B\U0001EE00-\U0001EE03\U0001EE05-\U0001EE1F\U0001EE21\U0001EE22\U0001EE24\U0001EE27\U0001EE29-\U0001EE32\U0001EE34-\U0001EE37\U0001EE39\U0001EE3B\U0001EE42\U0001EE47\U0001EE49\U0001EE4B\U0001EE4D-\U0001EE4F\U0001EE51\U0001EE52\U0001EE54\U0001EE57\U0001EE59\U0001EE5B\U0001EE5D\U0001EE5F\U0001EE61\U0001EE62\U0001EE64\U0001EE67-\U0001EE6A\U0001EE6C-\U0001EE72\U0001EE74-\U0001EE77\U0001EE79-\U0001EE7C\U0001EE7E\U0001EE80-\U0001EE89\U0001EE8B-\U0001EE9B\U0001EEA1-\U0001EEA3\U0001EEA5-\U0001EEA9\U0001EEAB-\U0001EEBB\U00020000-\U0002A6D6\U0002A700-\U0002B734\U0002B740-\U0002B81D\U0002B820-\U0002CEA1\U0002CEB0-\U0002EBE0\U0002F800-\U0002FA1D"
    // Combining
    if (category === 'M') return "\u034F\u0488\u0489\u0591-\u05AF\u05BD\u05C4\u05C5\u0610-\u061A\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0740\u0743\u0744\u0747-\u074A\u08D3-\u08E1\u08EA-\u08EF\u08F3\u0951\u0952\u0F18\u0F19\u0F35\u0F37\u0F3E\u0F3F\u0F82\u0F83\u0F86\u0F87\u0FC6\u17B4\u17B5\u17D3\u180B-\u180D\u1A7F\u1B6B-\u1B73\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CF4\u1CF7-\u1CF9\u2D7F\uA670-\uA672\uA8E0-\uA8F1\uFE00-\uFE0F\uFE21\uFE23-\uFE26\uFE28\uFE2A-\uFE2D\uFE2F\U000102E0\U00011366-\U0001136C\U00011370-\U00011374\U0001D165-\U0001D169\U0001D16D-\U0001D172\U0001D17B-\U0001D182\U0001D185-\U0001D18B\U0001D1AA-\U0001D1AD\U0001D242-\U0001D244\U0001DA00-\U0001DA36\U0001DA3B-\U0001DA6C\U0001DA75\U0001DA84\U0001DA9B-\U0001DA9F\U0001DAA1-\U0001DAAF\U0001E8D0-\U0001E8D6\U000E0100-\U000E01EF\u0332\u0313\u0343\u0486\u2CF1\u0314\u0485\u2CF0\u0301\u0341\u0954\u0300\u0340\u0953\u0306\u0302\u030C\u030A\u0342\u0308\u0344\u030B\u0303\u0307\u0338\u0327\u0328\u0304\u030D\u030E\u0312\u0315\u031A\u033D-\u033F\u0346\u034A-\u034C\u0350-\u0352\u0357\u035B\u035D\u035E\u0484\u0487\u0741\u0745\u17CB-\u17D1\u17DD\u1AB0-\u1AB4\u1ABB\u1ABC\u1DC0\u1DC1\u1DC3-\u1DC9\u1DCB-\u1DCE\u1DD1\u1DF5-\u1DF8\u1DFB\u1DFE\u20F0\u2CEF\uA67C\uA67D\U00010AE5\U00010D24-\U00010D27\U00010F48-\U00010F4A\U00010F4C\U0001BC9D\u0316-\u0319\u031C-\u0320\u0329-\u032C\u032F\u0333\u033A-\u033C\u0347-\u0349\u034D\u034E\u0353-\u0356\u0359\u035A\u035C\u035F\u0362\u0742\u0746\u07FD\u0859-\u085B\u1AB5-\u1ABA\u1ABD\u1DC2\u1DCF\u1DD0\u1DF9\u1DFC\u1DFD\u1DFF\u20EC-\u20EF\uFE27\U00010A0D\U00010AE6\U00010F46\U00010F47\U00010F4B\U00010F4D-\U00010F50\u0336\u0337\u20D8-\u20DA\u20E5\u20EA\u20EB\U0001BC9E\u1ABE\u20DD-\u20E0\u20E2-\u20E4\u3099\u309A\u0335\u0305\u0309\u030F-\u0311\u031B\u0321-\u0326\u032D\u032E\u0330\u0331\u0334\u0339\u0345\u0358\u0360\uFE22\uFE29\u0361\uFE20\u0483\uFE2E\uA66F\u05B0-\u05B8\u05C7\u05B9-\u05BB\u05C2\u05C1\u05BC\u05BF\uFB1E\u081C-\u0823\u0825-\u0827\u0829-\u082C\u0818\u0819\u082D\u064B\u08F0\u08E7\u064C\u08F1\u08E8\u064D\u08F2\u08E9\u064E\u08E4\u08F4\u08F5\u064F\u08E5\u08FE\u0650\u08E6\u08F6\u0651\u0AFB\U00011237\u0652\u0AFA\U0001123E\u0653\u0AFC\u0654\u0655\u065F\u0656-\u0658\u08FF\u0659-\u065E\u08E3\u08F7\u08F8\u08FD\u08FB\u08FC\u08F9\u08FA\u0670\u0711\u0730-\u073F\u07EB-\u07F3\u135F\u135E\u135D\uA6F0\uA6F1\U00016AF0-\U00016AF4\U0001E944-\U0001E946\U0001E94A\U0001E947-\U0001E949\u093C\u09BC\u0A3C\u0ABC\u0AFD-\u0AFF\u0B3C\u0CBC\u1B34\u1BE6\u1C37\uA9B3\U000110BA\U00011173\U000111CA\U00011236\U000112E9\U0001133B\U0001133C\U00011446\U000114C3\U000115C0\U000116B7\U0001183A\U00011A33\U00011D42\u0900\u0901\u0981\u0A01\u0A81\u0B01\u0C00\u0C01\u0C81\u0D01\u1B00\u1B01\uA8C5\uA980\U00011000\U00011080\U00011100\U00011180\U00011301\U00011443\U000114BF\U000115BC\U00011640\U00011A35-\U00011A37\U00011C3C\U00011CB6\U00011D43\u0902\u0982\u0A02\u0A82\u0B02\u0B82\u0C02\u0C04\u0C82\u0D00\u0D02\u0D82\u0F7E\u1036\u17C6\u1A74\u1B02\u1B80\u1CED\uA80B\uA880\uA981\U00010A0E\U00011001\U00011081\U00011101\U00011181\U00011234\U000112DF\U00011300\U00011302\U00011444\U000114C0\U000115BD\U0001163D\U000116AB\U00011837\U000119DE\U00011A38\U00011A96\U00011C3D\U00011CB5\U00011D40\U00011D95\u0903\u0983\u0A03\u0A83\u0B03\u0C03\u0C83\u0D03\u0D83\u0F7F\u1038\u17C7\u1B04\u1B82\uA881\uA983\U00010A0F\U00011002\U00011082\U00011102\U00011182\U00011303\U00011445\U000114C1\U000115BE\U0001163E\U000116AC\U00011838\U000119DF\U00011A39\U00011A97\U00011C3E\U00011D41\U00011D96\u09FE\U000111C9\U0001145E\u0A70\u0A71\u1B03\uA982\u1B81\uABEC\U00010A38-\U00010A3A\U000111CB\U000111CC\U00011A98\u0E4E\u0E47-\u0E4D\u0EC8-\u0ECD\uAABF\uAAC1\u0F39\uA92B-\uA92D\u1037\u17C8-\u17CA\u1A75-\u1A7C\u1939-\u193B\U00016B30\U0001E131\U00016B31\U0001E136\U00016B32\U0001E132\U00016B33\U0001E133\U00016B34\U0001E130\U00016B35\U0001E134\U00016B36\U0001E135\U0001E2EC-\U0001E2EF\u302A-\u302F\u20D0-\u20D7\u20DB\u20DC\u20E1\u20E6-\u20E9\U000101FD\u0363\u1DF2\u1DD3-\u1DD6\u1DE7-\u1DE9\u0368\u1DD7\u0369\u1DD9\u1DD8\u0364\u1DEA\u1DEB\u1DDA\u1DDB\u036A\u0365\u1DDC-\u1DDE\u1DEC\u036B\u1DDF-\u1DE1\u0366\u1DF3\u1DED\u1DEE\u036C\u1DCA\u1DE2-\u1DE5\u1DEF\u036D\u0367\u1DF4\u1DF0\u036E\u1DF1\u036F\u1DE6\u1DD2\u2DF6\u2DE0-\u2DE3\u2DF7\uA674\u2DE4\u2DE5\uA675\uA676\u2DF8\u2DE6-\u2DED\u2DF5\u2DEE\uA677\u2DF9\uA69E\u2DEF\uA67B\u2DF0-\u2DF3\uA678-\uA67A\u2DFA-\u2DFC\uA69F\u2DFD-\u2DFF\u2DF4\U0001E000-\U0001E006\U0001E008-\U0001E018\U0001E01B-\U0001E021\U0001E023\U0001E024\U0001E026-\U0001E02A\U00010376-\U0001037A\u0816\u0817\u081B\u07A6-\u07B0\u093E\u093A\u093B\u094F\u0956\u0957\u093F-\u0944\u0962\u0963\u0945\u0955\u0946\u0947\u094E\u0948\uA8FF\u0949-\u094D\u09BE-\u09C4\u09E2\u09E3\u09C7\u09C8\u09CB-\u09CD\u09D7\u0A51\u0A75\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0ABE-\u0AC4\u0AE2\u0AE3\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0B3E-\u0B44\u0B62\u0B63\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C3E-\u0C44\u0C62\u0C63\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0CBE-\u0CC4\u0CE2\u0CE3\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0D3E-\u0D44\u0D62\u0D63\u0D46-\u0D48\u0D4A-\u0D4C\u0D57\u0D4D\u0D3B\u0D3C\u0DCF-\u0DD4\u0DD6\u0DD8\u0DF2\u0DDF\u0DF3\u0DD9-\u0DDE\u0DCA\uABE3-\uABEA\uAAEB-\uAAEF\uAAF5\uABED\uAAF6\uA802\uA806\uA823-\uA827\uA8B4-\uA8C4\U000110B0-\U000110B9\U000111B3-\U000111C0\U0001122C-\U00011233\U00011235\U000112E0-\U000112E8\U000112EA\U0001133E-\U00011344\U00011362\U00011363\U00011347\U00011348\U0001134B-\U0001134D\U00011357\U00011435-\U00011442\U000114B0-\U000114BE\U000114C2\U000115AF-\U000115B2\U000115DC\U000115B3\U000115DD\U000115B4\U000115B5\U000115B8-\U000115BB\U000115BF\U00011630-\U0001163C\U0001163F\U000116AD-\U000116B6\U000119D1-\U000119D7\U000119DA\U000119E4\U000119DB-\U000119DD\U000119E0\U0001182C-\U00011836\U00011839\U00011720-\U0001172B\U0001171D-\U0001171F\U00011D47\U00011D31-\U00011D36\U00011D3A\U00011D3C\U00011D3D\U00011D3F\U00011D44\U00011D45\U00011D8A-\U00011D8E\U00011D90\U00011D91\U00011D93\U00011D94\U00011D97\u1BAC\u1BA1-\u1BA3\u1BAD\u1BA4-\u1BAB\U00011038-\U00011046\U0001107F\U00010A01-\U00010A03\U00010A05\U00010A06\U00010A0C\U00010A3F\U00011C2F-\U00011C36\U00011C38-\U00011C3B\U00011C3F\u0E31\u0E34-\u0E3A\u0EB1\u0EB4-\u0EBC\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\u0F90\u0FB9\u0F91-\u0F97\u0F99-\u0FAD\u0FBA\u0FAE-\u0FB1\u0FBB\u0FB2\u0FBC\u0FB3-\u0FB8\u0F8D-\u0F8F\u0F71-\u0F73\u0F80\u0F81\u0F74-\u0F7D\u0F84\U00011A3B-\U00011A3E\U00011A01-\U00011A0A\U00011A34\U00011A47\U00011A51-\U00011A53\U00011A59\U00011A5A\U00011A54\U00011A56\U00011A55\U00011A57\U00011A58\U00011A5B\U00011A8A-\U00011A90\U00011A95\U00011A91-\U00011A94\U00011A99\U00011C92-\U00011CA7\U00011CA9-\U00011CB4\u1C24\u1C25\u1C36\u1C26-\u1C35\u1920-\u192B\u1930-\u1938\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u1A17-\u1A1B\U00011EF3-\U00011EF6\u1BE7-\u1BF3\uA947-\uA953\uA926-\uA92A\u105E\u105F\u103B\u103C\u1060\u103D\u1082\u103E\u102C\u102B\u1083\u1072\u109C\u102D\u1071\u102E\u1033\u102F\u1073\u1074\u1030\u1056-\u1059\u1031\u1084\u1035\u1085\u1032\u109D\u1034\u1062\u1067\u1068\uA9E5\u1086\u1039\u103A\u1063\u1064\u1069-\u106D\u1087\u108B\u1088\u108C\u108D\u1089\u108A\u108F\u109A\u109B\uAA7B-\uAA7D\U00011127-\U00011132\U00011145\U00011146\U00011133\U00011134\u17B6-\u17C5\u17D2\u1A58-\u1A5B\u1A6B\u1A55-\u1A57\u1A5C-\u1A5E\u1A61\u1A6C\u1A62-\u1A6A\u1A6E\u1A6F\u1A73\u1A70-\u1A72\u1A6D\u1A60\uAA33-\uAA36\uAA29-\uAA32\uAA43\uAA4C\uAA4D\u1B35-\u1B44\uA9BE\uA9BF\uA9B4\uA9BC\uA9B6-\uA9B9\uA9BD\uA9BA\uA9BB\uA9B5\uA9C0\u1885\u1886\u18A9\U00016F51-\U00016F53\U00016F4F\U00016F54-\U00016F58\U00016F81\U00016F59-\U00016F5C\U00016F83\U00016F5D-\U00016F60\U00016F84\U00016F61-\U00016F65\U00016F86\U00016F66-\U00016F6D\U00016F7F\U00016F87\U00016F6E-\U00016F72\U00016F80\U00016F73\U00016F74\U00016F85\U00016F82\U00016F75-\U00016F7E\U00016F8F-\U00016F92"
    // Han
    if (category === 'Han') return "\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u3005\u3007\u3021-\u3029\u3038-\u303B\u3400-\u4DB5\u4E00-\u9FEF\uF900-\uFA6D\uFA70-\uFAD9\U00020000-\U0002A6D6\U0002A700-\U0002B734\U0002B740-\U0002B81D\U0002B820-\U0002CEA1\U0002CEB0-\U0002EBE0\U0002F800-\U0002FA1D"
    // Hangul
    if (category === 'Hangul') return "\u1100-\u11FF\u302E\u302F\u3131-\u318E\u3200-\u321E\u3260-\u327E\uA960-\uA97C\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC"
    // Greek
    if (category === 'Greek') return "\U0001D242-\U0001D244\u1FEF\u0384\u1FFD\u1FEE\u1FED\u1FC1\u1FBD\u1FBF\u1FCE\u1FCD\u1FCF\u1FFE\u1FDE\u1FDD\u1FDF\u1FC0\u0375\u03F6\U00010179-\U00010189\U0001018C-\U0001018E\U000101A0\U0001D200-\U0001D241\U0001D245\U00010140\U00010141\U00010144-\U00010147\U00010149-\U0001014E\U00010150-\U00010157\U00010160-\U00010172\U00010174-\U00010178\U0001018B\U0001018A\U00010142\U00010158-\U0001015E\U00010143\U00010148\U0001014F\U0001015F\U00010173\u03B1\u0391\u1F00\u1F08\u1F04\u1F0C\u1F84\u1F8C\u1F02\u1F0A\u1F82\u1F8A\u1F06\u1F0E\u1F86\u1F8E\u1F80\u1F88\u1F01\u1F09\u1F05\u1F0D\u1F85\u1F8D\u1F03\u1F0B\u1F83\u1F8B\u1F07\u1F0F\u1F87\u1F8F\u1F81\u1F89\u03AC\u1F71\u0386\u1FBB\u1FB4\u1F70\u1FBA\u1FB2\u1FB0\u1FB8\u1FB6\u1FB7\u1FB1\u1FB9\u1FB3\u1FBC\u03B2\u03D0\u1D5D\u1D66\u0392\u03B3\u1D5E\u1D67\u0393\u1D26\u03B4\u1D5F\u0394\u03B5\u03F5\u0395\u1F10\u1F18\u1F14\u1F1C\u1F12\u1F1A\u1F11\u1F19\u1F15\u1F1D\u1F13\u1F1B\u03AD\u1F73\u0388\u1FC9\u1F72\u1FC8\u03DD\u03DC\u0377\u0376\u03DB\u03DA\u03B6\u0396\u0371\u0370\u03B7\u0397\u1F20\u1F28\u1F24\u1F2C\u1F94\u1F9C\u1F22\u1F2A\u1F92\u1F9A\u1F26\u1F2E\u1F96\u1F9E\u1F90\u1F98\u1F21\u1F29\u1F25\u1F2D\u1F95\u1F9D\u1F23\u1F2B\u1F93\u1F9B\u1F27\u1F2F\u1F97\u1F9F\u1F91\u1F99\u03AE\u1F75\u0389\u1FCB\u1FC4\u1F74\u1FCA\u1FC2\u1FC6\u1FC7\u1FC3\u1FCC\u03B8\u03D1\u1DBF\u0398\u03F4\u03B9\u1FBE\u037A\u0399\u1F30\u1F38\u1F34\u1F3C\u1F32\u1F3A\u1F36\u1F3E\u1F31\u1F39\u1F35\u1F3D\u1F33\u1F3B\u1F37\u1F3F\u03AF\u1F77\u038A\u1FDB\u1F76\u1FDA\u1FD0\u1FD8\u1FD6\u03CA\u03AA\u0390\u1FD3\u1FD2\u1FD7\u1FD1\u1FD9\u03F3\u037F\u03BA\u03F0\u039A\u03D7\u03CF\u03BB\u039B\u1D27\u03BC\u039C\u03BD\u039D\u03BE\u039E\u03BF\u039F\u1F40\u1F48\u1F44\u1F4C\u1F42\u1F4A\u1F41\u1F49\u1F45\u1F4D\u1F43\u1F4B\u03CC\u1F79\u038C\u1FF9\u1F78\u1FF8\u03C0\u03D6\u03A0\u1D28\u03FB\u03FA\u03DF\u03DE\u03D9\u03D8\u03C1\u03F1\u1D68\u03A1\u1FE4\u1FE5\u1FEC\u1D29\u03FC\u03C3\u03F2\u03C2\u03A3\u03F9\u037C\u03FE\u037B\u03FD\u037D\u03FF\u03C4\u03A4\u03C5\u03A5\u03D2\u1F50\u1F54\u1F52\u1F56\u1F51\u1F59\u1F55\u1F5D\u1F53\u1F5B\u1F57\u1F5F\u03CD\u1F7B\u038E\u1FEB\u03D3\u1F7A\u1FEA\u1FE0\u1FE8\u1FE6\u03CB\u03AB\u03D4\u03B0\u1FE3\u1FE2\u1FE7\u1FE1\u1FE9\u03C6\u03D5\u1D60\u1D69\u03A6\u03C7\u1D61\u1D6A\u03A7\u03C8\u03A8\u1D2A\u03C9\u03A9\u2126\u1F60\u1F68\u1F64\u1F6C\u1FA4\u1FAC\u1F62\u1F6A\u1FA2\u1FAA\u1F66\u1F6E\u1FA6\u1FAE\u1FA0\u1FA8\u1F61\u1F69\u1F65\u1F6D\u1FA5\u1FAD\u1F63\u1F6B\u1FA3\u1FAB\u1F67\u1F6F\u1FA7\u1FAF\u1FA1\u1FA9\u03CE\u1F7D\u038F\u1FFB\u1FF4\u1F7C\u1FFA\u1FF2\u1FF6\u1FF7\u1FF3\u1FFC\uAB65\u03E1\u03E0\u0373\u0372\u03F8\u03F7"
    // Kana
    if (category === 'Kana') return "\u30FD\u30FE\u30A1\uFF67\u32D0\u30A2\uFF71\u3303\u3300-\u3302\u30A3\uFF68\u32D1\u30A4\uFF72\u3304\u3305\u30A5\uFF69\u32D2\u30A6\uFF73\u30F4\u3306\U0001B000\u30A7\uFF6A\u32D3\u30A8\uFF74\u3308\u3307\u30A9\uFF6B\u32D4\u30AA\uFF75\u330A\u3309\u30F5\u32D5\u30AB\uFF76\u30AC\u330B-\u330F\u32D6\u30AD\uFF77\u30AE\u3310-\u3317\u31F0\u32D7\u30AF\uFF78\u30B0\u3318-\u331B\u30F6\u32D8\u30B1\uFF79\u30B2\u331C\u32D9\u30B3\uFF7A\u30B4\u331E\u30FF\u331D\u32DA\u30B5\uFF7B\u30B6\u331F\u3320\u31F1\u32DB\u30B7\uFF7C\u30B8\u3321\u31F2\u32DC\u30B9\uFF7D\u30BA\u32DD\u30BB\uFF7E\u30BC\u3322\u3323\u32DE\u30BD\uFF7F\u30BE\u32DF\u30BF\uFF80\u30C0\u3324\u32E0\u30C1\uFF81\u30C2\u30C3\uFF6F\u32E1\u30C4\uFF82\u30C5\u32E2\u30C6\uFF83\u30C7\u3325\u31F3\u32E3\u30C8\uFF84\u30C9\u3326\u3327\u32E4\u30CA\uFF85\u3328\u32E5\u30CB\uFF86\u31F4\u32E6\u30CC\uFF87\u32E7\u30CD\uFF88\u32E8\u30CE\uFF89\u3329\u31F5\u32E9\u30CF\uFF8A\u30D0\u30D1\u332B-\u332D\u332A\u31F6\u32EA\u30D2\uFF8B\u30D3\u30D4\u332E-\u3331\u31F7\u32EB\u30D5\uFF8C\u30D6\u30D7\u3332-\u3335\u31F8\u32EC\u30D8\uFF8D\u30D9\u30DA\u333B\u333C\u3336-\u333A\u31F9\u32ED\u30DB\uFF8E\u30DC\u30DD\u3341\u3342\u333D-\u3340\u32EE\u30DE\uFF8F\u3343-\u3347\u32EF\u30DF\uFF90\u3348-\u334A\u31FA\u32F0\u30E0\uFF91\u32F1\u30E1\uFF92\u334D\u334B\u334C\u32F2\u30E2\uFF93\u30E3\uFF6C\u32F3\u30E4\uFF94\u334E\u334F\u30E5\uFF6D\u32F4\u30E6\uFF95\u3350\u30E7\uFF6E\u32F5\u30E8\uFF96\u31FB\u32F6\u30E9\uFF97\u31FC\u32F7\u30EA\uFF98\u3351\u3352\u31FD\u32F8\u30EB\uFF99\u3354\u3353\u31FE\u32F9\u30EC\uFF9A\u3355\u3356\u31FF\u32FA\u30ED\uFF9B\u30EE\u32FB\u30EF\uFF9C\u30F7\u3357\U0001B164\u32FC\u30F0\u30F8\U0001B165\u32FD\u30F1\u30F9\U0001B166\u32FE\u30F2\uFF66\u30FA\U0001B167\u30F3\uFF9D"
    if (category === 'Puntuation') return `\u180A\u1CD3\u203E\uFE49-\uFE4C_\uFF3F\uFE4D-\uFE4F\uFE33\uFE34\u2017\-\uFF0D\uFE63\u058A\u1400\u1B60\u1806\u1807\u2010-\u2013\uFE32\u2014\uFE58\uFE31\u2015\u2E3A\u2E3B\u2053\u2E43\u2E17\u2E40\u301C\u30A0\u30FB\uFF65,\uFF0C\uFE50\uFE10\u2E34\u2E32\u2E41\u2E4C\u2E4E\u2E4F\u055D\u060C\u060D\u066B\u066C\u07F8\u1802\u1808\uA4FE\uA60D\uA6F5\U00016E97\u3001\uFE51\uFE11\uFF64\uFE45\uFE46\U00016FE2;\u037E\uFF1B\uFE54\uFE14\u061B\u204F\u2E35\uA6F6\u2E49\:\uFF1A\uFE55\uFE13\u0589\u061E\u0703-\u0708\u0830-\u083E\u1361\u1363-\u1366\u1804\u1805\u0F14\u17D6\u1B5D\uA9C7\u16EB-\u16ED\uA6F4!\uFF01\uFE57\uFE15\u00A1\u055C\u07F9\u1944\U0001E95E?\uFF1F\uFE56\uFE16\u2048\u2047\u00BF\u2E2E\u055E\u061F\u0709\u1367\u1945\u2CFA\u2CFB\uA60F\uA6F7\uAAF1\U00011143\U0001E95F\u203D\u2E18.\uFF0E\u2024\uFE52\u2025\uFE30\u2026\uFE19\u1801\u06D4\u0701\u0702\u1362\u1803\u1809\u166E\u1B5C\u2CF9\u2CFE\u2E30\u2E3C\uA4FF\uA60E\uA6F3\U00016AF5\U00016E98\U0001BC9F\u3002\uFE12\uFF61\u00B7\u0387\u2E31\u2E33\u0964\u0965\uA8CE\uA8CF\u1C3B\u1C3C\uA876\uA877\u1735\u1736\uA92F\u104A\u104B\u17D4\u17D5\u1AA8-\u1AAB\u1B5E\u1B5F\uA9C8\uA9C9\uAA5D-\uAA5F\uAAF0\uABEB\U00010A56\U00010A57\U00011047\U00011048\U000110C0\U000110C1\U00011141\U00011142\U000111C5\U000111C6\U00011238\U00011239\U0001144B\U0001144C\U000115C2\U000115C3\U00011641\U00011642\U0001173C\U0001173D\U00011C41\U00011C42\U00016A6E\U00016A6F\u1C7E\u1C7F\u0700\u07F7\u10FB\u1360\u1368\u1A1E\u1A1F\u1B5A\u1B5B\uA9C1-\uA9C6\uA9CA-\uA9CD\uA6F2\uA95F\U00010857\U00010B3A-\U00010B3F\U00010F55-\U00010F59\U000110BE\U000110BF\U00011140\U000111C8\U000111DE\U000111DF\U000112A9\U0001173E\U00011EF7\U00011EF8\u2055\u2056\u2058-\u205E\u2E2A-\u2E2D\u2E3D\u2CFC\u2CFF\u2E19\U0001093F\U00010100-\U00010102\U0001039F\U000103D0\U0001091F\U00012470-\U00012474'\uFF07\u2018-\u201B\u2039\u203A"\uFF02\u201C-\u201F\u2E42\u301D-\u301F\u00AB\u00BB(\uFF08\uFE59\u207D\u208D\uFE35)\uFF09\uFE5A\u207E\u208E\uFE36\[\uFF3B\uFE47\]\uFF3D\uFE48\{\uFF5B\uFE5B\uFE37\}\uFF5D\uFE5C\uFE38\u0F3A-\u0F3D\u169B\u169C\u2045\u2046\u2308-\u230B\u29FC\u29FD\u2983-\u2985\uFF5F\u2986\uFF60\u2987-\u2998\u27C5\u27C6\u27E6-\u27EF\u2768-\u2775\u2E02-\u2E05\u2E09\u2E0A\u2E0C\u2E0D\u2E1C\u2E1D\u2E20-\u2E29\u2329\u3008\uFE3F\u232A\u3009\uFE40\u300A\uFE3D\u300B\uFE3E\u300C\uFE41\uFF62\u300D\uFE42\uFF63\u300E\uFE43\u300F\uFE44\u3010\uFE3B\u3011\uFE3C\u3014\uFE5D\uFE39\u3015\uFE5E\uFE3A\u3016\uFE17\u3017\uFE18\u3018-\u301B\uFD3E\uFD3F\u2016\u2E3E\u29D8-\u29DB\u00A7\u2E39\u00B6\u204B\u2E4D\u2E3F@\uFF20\uFE6B*\uFF0A\uFE61\u204E\u2051\u066D\uA673/\uFF0F\\\uFF3C\uFE68\u2E4A\&\uFF06\uFE60\u204A#\uFF03\uFE5F%\uFF05\uFE6A\u066A\u2030\u0609\u2031\u060A\u2020\u2021\u2E36-\u2E38\u2E4B\u2022\u2023\u2027\u2043\u204C\u204D\u2032-\u2034\u2057\u2035-\u2037\u3003\u2038\u203B\u203F\u2054\u2040\u2050\u2041\u2042\u2E00\u2E01\u2E06-\u2E08\u2E0B\u2E0E-\u2E16\u2E1A\u2E1B\u2E1E\u2E1F\u2E44-\u2E48\uA67E\u055A\u055B\u055F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u070A-\u070D\u085E\u1800\U00011660-\U0001166C\u0970\uA8F8-\uA8FA\uA8FC\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\uAADE\uAADF\u0F04-\u0F0A\u0FD0\u0FD1\u0F0B-\u0F12\u0F85\u0FD2-\u0FD4\u0FD9\u0FDA\U00011A3F-\U00011A46\U00011A9A-\U00011A9C\U00011A9E-\U00011AA2\U00011C70\U00011C71\u1C3D-\u1C3F\u104C-\u104F\u17D8-\u17DA\u1AA0-\u1AA6\u1AAC\u1AAD\u1CC0-\u1CC7\u2D70\uA874\uA875\u1BFC-\u1BFF\uA92E\uA9DE\uA9DF\uAA5C\U0001056F\U00011049-\U0001104D\U00010A50-\U00010A55\U00010A58\U00011C43-\U00011C45\U00010B39\U00010AF0-\U00010AF6\U00010B99-\U00010B9C\U000110BB\U000110BC\U00011174\U00011175\U000111CD\U000111C7\U000111DB\U000111DD\U0001123A-\U0001123D\U0001144D-\U0001144F\U0001145B\U0001145D\U000114C6\U000115C1\U000115C4-\U000115D7\U00011643\U0001183B\U000119E2\U00011FFF\U00016B37-\U00016B3B\U00016B44\U00016E99\U00016E9A\U0001DA87-\U0001DA8B\U00010A7F\u303D\u203C\u2049\u3030`
  }
}
